'''We know that the first two Fibonacci numbers are 0 and 1,
and the successive Fibonacci numbers are generated by adding
the preceding two numbers in the sequence. Now consider
another sequence where we are given the first k numbers, and
every number after that is generated by multiplying the
previous k numbers in the sequence. If k = 3, and we are
given 1, 2, 3 as the first three numbers, then the 4th, 5th and
6th numbers in the sequence are 6, 36 and 648, respectively.
Given n, k, and the first k numbers, your objective is to print
the n
th number from that sequence. You should try to
minimize the number of multiplications needed.
'''
def genterm(n, k, list):
    if n <= k:
        return list[n - 1]
    else:
        new_term = 1
        for i in range(n - k, n):
            new_term *= genterm(i, k, list)
        return new_term

n = int(input("Enter n: "))
k = int(input("Enter k: "))
initial_numbers = list(range(1, k + 1))
nth_number = genterm(n, k, initial_numbers)
print("The", n, "th number in the sequence is:", nth_number)
